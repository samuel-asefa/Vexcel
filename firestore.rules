rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - users can read/write their own data and read others for team functionality
    match /users/{userId} {
      // Users can read/write their own profile
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Users can read other users' basic info (for teams, leaderboards)
      allow read: if request.auth != null;
    }
    
    // Teams collection - team members and captains have different permissions
    match /teams/{teamId} {
      // Anyone authenticated can read team data (for browsing teams, leaderboards)
      allow read: if request.auth != null;
      
      // Team captains can create and update teams
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.captainId;
      
      // Team captains and members can update team data
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.captainId || 
         request.auth.uid in resource.data.memberIds ||
         request.auth.uid == request.resource.data.captainId ||
         request.auth.uid in request.resource.data.memberIds);
      
      // Only team captains can delete teams
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.captainId;
    }
    
    // Lessons collection - public read access, restricted write
    match /lessons/{lessonId} {
      // All authenticated users can read lessons
      allow read: if request.auth != null;
      
      // Only allow writes from admin users (you can modify this logic)
      // For now, allowing authenticated users to create lessons for development
      allow write: if request.auth != null;
    }
    
    // Lesson Progress collection - users can only access their own progress
    match /lessonProgress/{progressId} {
      // Users can read/write their own progress
      // Progress ID format: userId_lessonId
      allow read, write: if request.auth != null && 
        progressId.matches('^' + request.auth.uid + '_.*');
    }
    
    // Achievements collection - read-only for users
    match /achievements/{achievementId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins should create achievements
    }
    
    // User achievements - users can read their own, captains can read team members'
    match /userAchievements/{userAchievementId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Team captains can read their team members' achievements
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/teams/$(resource.data.teamId)) &&
        get(/databases/$(database)/documents/teams/$(resource.data.teamId)).data.captainId == request.auth.uid;
    }
    
    // Quiz results - users can read/write their own results
    match /quizResults/{resultId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Team captains can read their team members' quiz results
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/users/$(resource.data.userId)).data.teamId != null &&
        exists(/databases/$(database)/documents/teams/$(get(/databases/$(database)/documents/users/$(resource.data.userId)).data.teamId)) &&
        get(/databases/$(database)/documents/teams/$(get(/databases/$(database)/documents/users/$(resource.data.userId)).data.teamId)).data.captainId == request.auth.uid;
    }
    
    // Global settings/configuration - read-only for users
    match /config/{configId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins
    }
  }
}